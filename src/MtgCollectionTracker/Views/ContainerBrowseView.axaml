<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="clr-namespace:MtgCollectionTracker.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="MtgCollectionTracker.Views.ContainerBrowseView"
			 x:DataType="vm:ContainerBrowseViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:ContainerBrowseViewModel />
	</Design.DataContext>
	<DockPanel>
		<StackPanel DockPanel.Dock="Top">
			<Grid ColumnDefinitions="160, *, 160">
				<Button IsEnabled="{Binding PreviousEnabled}" Command="{Binding PreviousPageCommand}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Grid.Column="0">Previous Page</Button>
				<TextBlock HorizontalAlignment="Center" Grid.Column="1" Text="{Binding PageSummary}" />
				<Button IsEnabled="{Binding NextEnabled}" Command="{Binding NextPageCommand}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Grid.Column="2">Next Page</Button>
			</Grid>
			<StackPanel Orientation="Horizontal">
				<CheckBox IsEnabled="{Binding !Behavior.IsBusy}" IsChecked="{Binding ShowOnlyMissingMetadata}">Show only skus with missing metadata</CheckBox>
			</StackPanel>
			<ProgressBar IsIndeterminate="True" IsVisible="{Binding Behavior.IsBusy}" />
		</StackPanel>
		<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
			<Button IsEnabled="{Binding !Behavior.IsBusy}" Command="{Binding AddSkusCommand}" Content="Add New" HorizontalAlignment="Center" />
			<!--
			<Button IsEnabled="{Binding Behavior.HasOneSelectedItem}" Command="{Binding ViewSelectedSkuCommand}" Content="View Details" HorizontalAlignment="Center" />
			-->
			<Button IsEnabled="{Binding Behavior.IsItemSplittable}" Command="{Binding SplitSelectedSkuCommand}" Content="Split" HorizontalAlignment="Center" />
			<Button IsEnabled="{Binding Behavior.HasAtLeastOneSelectedItem}" Command="{Binding EditSelectedSkuCommand}" Content="Edit" HorizontalAlignment="Center" />
			<Button IsEnabled="{Binding Behavior.HasAtLeastOneSelectedItem}" Command="{Binding SendSkusToContainerCommand}" Content="Send to Deck/Container" HorizontalAlignment="Center" />
			<Button IsEnabled="{Binding Behavior.HasAtLeastOneSelectedItem}" Command="{Binding UpdateSkuMetadataCommand}" Content="Update Metadata" HorizontalAlignment="Center" />
			<TextBlock Margin="6" VerticalAlignment="Center" Text="{Binding ContainerSummary}" />
		</StackPanel>
		<Panel>
			<DockPanel>
				<StackPanel DockPanel.Dock="Top" Spacing="20" Orientation="Horizontal">
					<TextBlock VerticalAlignment="Center">View as:</TextBlock>
					<RadioButton GroupName="View Mode" IsChecked="{Binding Behavior.ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:CardItemViewMode.VisualList}}" Content="Visual List"/>
					<RadioButton GroupName="View Mode" IsChecked="{Binding Behavior.ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:CardItemViewMode.Table}}" Content="Table"/>
				</StackPanel>
				<ListBox IsEnabled="{Binding !Behavior.IsBusy}" IsVisible="{Binding Behavior.IsListMode}" ItemsSource="{Binding SearchResults}" SelectionMode="Multiple" SelectedItems="{Binding Behavior.SelectedItems}" Background="Transparent" Margin="0 20">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
				</ListBox>
				<SplitView IsPaneOpen="True" PanePlacement="Right" IsVisible="{Binding Behavior.IsTableMode}" OpenPaneLength="400">
					<SplitView.Pane>
						<!-- 
						TODO: I'm sure there's a way to templatize this content to avoid current
						XAML duplication with CardSkuItemView.axaml
						
						I'm just not expert enough yet
						-->
						<StackPanel IsVisible="{Binding Behavior.HasSelectedCardSku}" VerticalAlignment="Center" HorizontalAlignment="Center">
							<Canvas Width="400" Height="560">
								<Panel Canvas.Left="0" Canvas.Top="0" Canvas.Bottom="0" Canvas.Right="0" Background="#7FFF22DD">
									<!-- TODO: If this is even possible, do a flip animation for double-faced cards -->
									<Image Width="400" Stretch="Uniform" Source="{Binding Behavior.SelectedItems[0].CardImageLarge^}" />
									<Panel Height="560" IsVisible="{Binding Behavior.SelectedItems[0].CardImageLarge, Converter={x:Static ObjectConverters.IsNull}}">
										<PathIcon Height="75" Width="75" Data="{StaticResource card}" />
									</Panel>
								</Panel>
							</Canvas>
							<Button IsVisible="{Binding Behavior.SelectedItems[0].IsDoubleFaced}" Grid.Column="0" HorizontalAlignment="Center" Content="{Binding Behavior.SelectedItems[0].SwitchLabel}" Command="{Binding Behavior.SelectedItems[0].SwitchFaceCommand}" />
						</StackPanel>
					</SplitView.Pane>
					<Grid>
						<!-- 
						NOTE: Can only have single selection mode as multi-selection data binding
						is not currently supported :( 
						-->
						<DataGrid ItemsSource="{Binding SearchResults}"
								  CanUserReorderColumns="True"
								  CanUserResizeColumns="True"
								  CanUserSortColumns="True"
								  GridLinesVisibility="All"
								  IsReadOnly="True"
								  SelectionMode="Single"
								  SelectedItem="{Binding Behavior.SelectedRow}"
								  BorderThickness="1">
							<DataGrid.Columns>
								<DataGridTextColumn Header="Qty" Binding="{Binding Quantity}"/>
								<DataGridTextColumn Header="Card Name" Binding="{Binding CardName}"/>
								<DataGridTextColumn Header="Language" Binding="{Binding Language}"/>
								<DataGridTextColumn Header="Edition" Binding="{Binding Edition}"/>
								<DataGridTextColumn Header="Collector #" Binding="{Binding CollectorNumber}"/>
								<DataGridTextColumn Header="Foil?" Binding="{Binding IsFoil}"/>
								<DataGridTextColumn Header="Comments" Binding="{Binding Comments}"/>
							</DataGrid.Columns>
						</DataGrid>
					</Grid>
				</SplitView>
			</DockPanel>
			<TextBlock IsVisible="{Binding HasNoResults}" VerticalAlignment="Center" HorizontalAlignment="Center" Text="No results found :(" />
		</Panel>
	</DockPanel>
</UserControl>
