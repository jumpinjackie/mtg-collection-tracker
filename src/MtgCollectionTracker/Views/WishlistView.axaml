<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="clr-namespace:MtgCollectionTracker.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="MtgCollectionTracker.Views.WishlistView"
			 x:DataType="vm:WishlistViewModel">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:WishlistViewModel />
	</Design.DataContext>
	<DockPanel>
		<StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal">
			<Button IsEnabled="{Binding !Behavior.IsBusy}" Command="{Binding AddCardsCommand}" Content="Add New" HorizontalAlignment="Center" />
			<Button IsEnabled="{Binding Behavior.HasOneSelectedItem}" Command="{Binding EditItemCommand}" Content="Edit" />
			<Button IsEnabled="{Binding Behavior.HasAtLeastOneSelectedItem}" Command="{Binding MoveToCollectionCommand}" Content="Move to Collection" ToolTip.Tip="Add these selected cards to your inventory. This marks these wishlist items as purchased and removes them from your wishlist" />
			<Button IsEnabled="{Binding Behavior.HasOneSelectedItem}" Command="{Binding DeleteCardsCommand}" Content="Delete" />
			<Button IsEnabled="{Binding !Behavior.IsBusy}" Command="{Binding ManageVendorsCommand}" Content="Manage Vendors" />
			<Button Command="{Binding GenerateBuyingListCommand}" Content="Generate Buying List" />
			<Button IsEnabled="{Binding Behavior.HasAtLeastOneSelectedItem}" Command="{Binding UpdateMetadataCommand}" Content="Update Metadata" HorizontalAlignment="Center" />
			<TextBlock Margin="6" VerticalAlignment="Center" Text="{Binding WishlistSummary}" />
		</StackPanel>
		<Panel>
			<DockPanel>
				<StackPanel DockPanel.Dock="Top">
					<StackPanel Spacing="20" Orientation="Horizontal">
						<TextBlock VerticalAlignment="Center">View as:</TextBlock>
						<RadioButton GroupName="View Mode" IsChecked="{Binding Behavior.ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:CardItemViewMode.VisualList}}" Content="Visual List"/>
						<RadioButton GroupName="View Mode" IsChecked="{Binding Behavior.ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:CardItemViewMode.Table}}" Content="Table"/>
						<TextBlock VerticalAlignment="Center" IsVisible="{Binding Tags, Converter={StaticResource CollectionNotEmpty}}">Filter by tags:</TextBlock>
						<ListBox IsVisible="{Binding Tags, Converter={StaticResource CollectionNotEmpty}}" IsEnabled="{Binding !Behavior.IsBusy}" Height="32" Grid.Row="1" Grid.ColumnSpan="2" SelectionMode="Multiple, Toggle" ItemsSource="{Binding Tags}" SelectedItems="{Binding SelectedTags}">
							<ListBox.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal" />
								</ItemsPanelTemplate>
							</ListBox.ItemsPanel>
						</ListBox>
					</StackPanel>
					<ProgressBar IsIndeterminate="True" IsVisible="{Binding Behavior.IsBusy}" />
				</StackPanel>
				<ListBox IsVisible="{Binding Behavior.IsListMode}" IsEnabled="{Binding !Behavior.IsBusy}" SelectionMode="Multiple" SelectedItems="{Binding Behavior.SelectedItems}" ItemsSource="{Binding Cards}" Background="Transparent" Margin="0 20">
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>
				</ListBox>
				<!-- TODO: Same templatization to avoid XAML duplication -->
				<SplitView IsPaneOpen="True" PanePlacement="Right" IsVisible="{Binding Behavior.IsTableMode}" OpenPaneLength="400">
					<SplitView.Pane>
						<!-- 
						TODO: I'm sure there's a way to templatize this content to avoid current
						XAML duplication with CardSkuItemView.axaml
						
						I'm just not expert enough yet
						-->
						<StackPanel IsVisible="{Binding Behavior.HasSelectedCardSku}" VerticalAlignment="Center" HorizontalAlignment="Center">
							<Canvas Width="400" Height="560">
								<Panel Canvas.Left="0" Canvas.Top="0" Canvas.Bottom="0" Canvas.Right="0" Background="#7FFF22DD">
									<!-- TODO: If this is even possible, do a flip animation for double-faced cards -->
									<Image Width="400" Stretch="Uniform" Source="{Binding Behavior.SelectedItems[0].CardImageLarge^}" />
									<Panel Height="560" IsVisible="{Binding Behavior.SelectedItems[0].CardImageLarge, Converter={x:Static ObjectConverters.IsNull}}">
										<PathIcon Height="75" Width="75" Data="{StaticResource card}" />
									</Panel>
								</Panel>
							</Canvas>
							<Button IsVisible="{Binding Behavior.SelectedItems[0].IsDoubleFaced}" Grid.Column="0" HorizontalAlignment="Center" Content="{Binding Behavior.SelectedItems[0].SwitchLabel}" Command="{Binding Behavior.SelectedItems[0].SwitchFaceCommand}" />
						</StackPanel>
					</SplitView.Pane>
					<Grid>
						<!-- 
						NOTE: Can only have single selection mode as multi-selection data binding
						is not currently supported :( 
						-->
						<DataGrid ItemsSource="{Binding Cards}"
								  IsEnabled="{Binding !Behavior.IsBusy}"
								  CanUserReorderColumns="True"
								  CanUserResizeColumns="True"
								  CanUserSortColumns="True"
								  GridLinesVisibility="All"
								  IsReadOnly="True"
								  SelectionMode="Single"
								  SelectedItem="{Binding Behavior.SelectedRow}"
								  BorderThickness="1">
							<DataGrid.Columns>
								<DataGridTextColumn Header="Qty" Binding="{Binding QuantityNum}"/>
								<DataGridTextColumn Header="Card Name" Binding="{Binding CardName}"/>
								<DataGridTextColumn Header="Language" Binding="{Binding Language}"/>
								<DataGridTextColumn Header="Edition" Binding="{Binding Edition}"/>
								<DataGridTextColumn Header="Collector #" Binding="{Binding CollectorNumber}"/>
								<!--
								<DataGridTextColumn Header="Foil?" Binding="{Binding IsFoil}"/>
								-->
								<DataGridTextColumn Header="Comments" Binding="{Binding Comments}"/>
							</DataGrid.Columns>
						</DataGrid>
					</Grid>
				</SplitView>
			</DockPanel>
			<TextBlock IsVisible="{Binding IsEmptyCollection}" VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center">
				Your wishlist is empty. Add cards to your wishlist below.<LineBreak />
				Add vendors to allow recording price matching data for your wishlist items.
			</TextBlock>
		</Panel>
	</DockPanel>
</UserControl>
